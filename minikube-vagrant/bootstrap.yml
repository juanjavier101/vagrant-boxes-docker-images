---
- name: bootstrap a debian minikube vagrant box
  hosts: all, localhost
  become: true
  vars_files:
  - vars.yml

  tasks:
  - name: install dependencies for docker and kubernetes
    apt:
      name: "{{item}}"
      state: installed
    with_items:
    - apt-transport-https
    - dirmngr

  - name: add docker and kubernetes apt gpg keys
    apt_key:
      url: "{{item}}"
      state: present
    with_items:
    - https://download.docker.com/linux/debian/gpg
    - https://packages.cloud.google.com/apt/doc/apt-key.gpg

  - name: add docker and kubernetes apt repos
    apt_repository:
      repo: "{{item}}"
      state: present
    with_items:
    - deb [arch=amd64] https://download.docker.com/linux/debian stretch stable
    - deb http://apt.kubernetes.io/ kubernetes-stretch main

  - name: install docker, kubectl, and socat (needed for helm)
    apt:
      name: "{{item}}"
      state: installed
    with_items:
    - "docker-ce={{dockervers}}~ce-0~debian"
    - kubectl
    - socat

  - name: grab and install minikube package
    apt:
      deb: "https://github.com/kubernetes/minikube/releases/download/v{{minikubevers.majmin}}.{{minikubevers.patch}}/minikube_{{minikubevers.majmin}}-{{minikubevers.patch}}.deb"
      state: installed

  - name: initialize minikube using driver for docker and vagrant hostname/ip
    command: minikube start --vm-driver=none --apiserver-names=kubernetes.local --apiserver-ips=192.168.88.88 --kubernetes-version=v{{kubevers}}
    #--network-plugin=cni \
    #--container-runtime=containerd \
    #--bootstrapper=kubeadm
    environment:
      CHANGE_MINIKUBE_NONE_USER: true

  - name: give minikube some time to actually come up
    command: sleep 10

    # TODO: replace with nodeport type instead of clusterip: https://github.com/kubernetes/dashboard/wiki/Accessing-Dashboard---1.7.X-and-above#nodeport
  - name: instantiate and proxy minikube dashboard
    command: nohup minikube dashboard &; nohup kubectl proxy &

  - name: capture cert info
    command: "cat /root/.minikube/{{item}}"
    register: "{{item}}_contents"
    with_items:
    - ca.crt
    - client.crt
    - client.key

  - name: display cert info
    debug:
      var: "{{item}}_contents.stdout"
    with_items:
    - ca.crt
    - client.crt
    - client.key
